version: 2.1

#orbs:
#  maven: circleci/maven@0.0.12

jobs:

  build:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
      - run: mvn clean install -DskipTests
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: .
          paths:
            - .

  test:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
      - run: mvn test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - store_artifacts:
          path: ~/repo/target/cucumber/index.html
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
          
  sonar:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
      - run:
          name: Run Code Quality Tests
          command: mvn sonar:sonar -X -Dsonar.login=${SONAR_LOGIN} -Dsonar.projectKey=${CIRCLE_PROJECT_USERNAME}_${CIRCLE_PROJECT_REPONAME}
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
      - run:
          name: Check Quality Gate
          command: |
            REPORT_PATH="/home/circleci/repo/target/sonar/report-task.txt"
            CE_TASK_ID_KEY="ceTaskId="
            SONAR_INSTANCE="https://sonarcloud.io"
            SLEEP_TIME=5
            # get the compute engine task id
            ce_task_id=$(cat $REPORT_PATH | grep $CE_TASK_ID_KEY | cut -d'=' -f2)
            echo "Using task id of ${ce_task_id}"
            if [ -z "$ce_task_id" ]; then
               echo "No task id found"
               exit 1
            fi
            # grab the status of the task
            # if CANCELLED or FAILED, fail the Build
            # if SUCCESS, stop waiting and grab the analysisId
            wait_for_success=true
            while [ "${wait_for_success}" = "true" ]
            do
              ce_status=$(curl -s -u "${SONAR_LOGIN}": "${SONAR_INSTANCE}"/api/ce/task?id=${ce_task_id} | jq -r .task.status)
              echo "Status of SonarQube task is ${ce_status}"
              if [ "${ce_status}" = "CANCELLED" ]; then
                echo "SonarQube Compute job has been cancelled - exiting with error"
                exit 504
              fi
              if [ "${ce_status}" = "FAILED" ]; then
                echo "SonarQube Compute job has failed - exit with error"
                exit 500
              fi
              if [ "${ce_status}" = "SUCCESS" ]; then
                wait_for_success=false
              fi
              sleep "${SLEEP_TIME}"
            done
            ce_analysis_id=$(curl -s -u "${SONAR_LOGIN}": "${SONAR_INSTANCE}"/api/ce/task?id=$ce_task_id | jq -r .task.analysisId)
            echo "Using analysis id of ${ce_analysis_id}"
            # get the status of the quality gate for this analysisId
            qg_status=$(curl -s -u "${SONAR_LOGIN}": "${SONAR_INSTANCE}"/api/qualitygates/project_status?analysisId="${ce_analysis_id}" | jq -r .projectStatus.status)
            echo "Quality Gate status is ${qg_status}"
            if [ "${qg_status}" != "OK" ]; then
              echo "Quality gate is not OK - exiting with error"
              exit 1
            fi
  
  publish:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    environment:
      MAVEN_OPTS: -Xmx3200m
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
      - run:
          name: Import GnuPG Keys
          command: echo ${GPG_KEY} | base64 --decode | gpg --import --no-tty --batch --yes || true
      - run:
          name: Publish to Maven Central
          command: mvn deploy -s .circleci/.circleci.settings.xml -P release -DskipTests -Dmvn-gpg.passphrase=${GPG_PASSPHRASE} -Dossrh.username=${OSSRH_USERNAME} -Dossrh.password=${OSSRH_PASSWORD}
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}

workflows:
  ci-cd:
    jobs:
      - build
      - test:
          requires:
            - build
      - sonar:
          requires:
            - build
      - publish:
          filters:
            branches:
              only:
                - master
          requires:
            - test
            - sonar
